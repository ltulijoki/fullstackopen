{"version":3,"sources":["services/persons.js","App.js","index.js"],"names":["root","axios","get","obj","post","id","delete","put","Message","message","type","className","ShowNumber","person","persons","setPersons","setMessage","setType","name","number","onClick","window","confirm","filter","_id","PersonService","setTimeout","remove","Filter","haku","setSearch","value","onChange","event","target","Persons","search","filtered","toLowerCase","includes","map","PersonForm","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","preventDefault","end","forEach","i","length","then","res","p","data","catch","e","concat","error","response","split","add","App","useEffect","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f1bed4c4.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nconst root = '/api/persons'\r\n\r\nconst get = () => {\r\n  return axios.get(root)\r\n}\r\n\r\nconst add = obj => {\r\n  return axios.post(root, obj)\r\n}\r\n\r\nconst remove = id => {\r\n  axios.delete(`${root}/${id}`)\r\n}\r\n\r\nconst update = (id, obj) => {\r\n  return axios.put(`${root}/${id}`, obj)\r\n}\r\n\r\nexport default { get, add, remove, update }","import React, { useEffect, useState } from 'react'\nimport PersonService from './services/persons.js'\n\nconst Message = ({ message, type }) => {\n  if (message === null) {\n    return null\n  }\n\n  return (\n    <div className={type}>\n      {message}\n    </div>\n  )\n}\n\nconst remove = (persons, setPersons, id, name, setMessage, setType) => {\n  if (window.confirm(`Delete ${name} ?`)) {\n    setPersons(persons.filter(person => person._id !== id))\n    PersonService.remove(id)\n    setMessage(`Deleted ${name}`)\n    setType('added')\n    setTimeout(() => {\n      setMessage(null)\n    }, 5000)\n  }\n}\n\nconst ShowNumber = ({ person, persons, setPersons, id, setMessage, setType }) => {\n  return (\n    <div>        \n      {person.name} {person.number}\n      <button onClick={() => {remove(persons, setPersons, id, person.name, setMessage, setType)}}>delete</button>\n    </div>\n  )\n}\n\nconst Filter = ({ haku, setSearch }) => {\n  return (\n    <div>\n      <div>filter shown with <input value={haku} onChange={(event) => {setSearch(event.target.value)}} /></div>\n    </div>\n  )\n}\n\nconst Persons = ({ persons, search, setPersons, setMessage, setType }) => {\n  const filtered = persons.filter(person => person.name.toLowerCase().includes(search.toLowerCase()))\n\n  return (\n    <div>\n      {filtered.map(person =>\n        <ShowNumber person={person} persons={persons} setPersons={setPersons} id={person._id} key={person._id} setMessage={setMessage} setType={setType} />\n      )}\n    </div>\n  )\n}\n\nconst add = (event, persons, newName, newNumber, setPersons, setNewName, setNewNumber, setMessage, setType) => {\n  event.preventDefault()\n  var end = false\n  persons.forEach(value => {\n    if (newName === value.name) {\n      if (!window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        end = true\n        setNewName('')\n        setNewNumber('')\n        return\n      }\n      const obj = {\n        name : newName,\n        number : newNumber\n      }\n      let id = 0\n      for (let i = 0; i < persons.length; i++) {\n        if (persons[i].name === newName) {\n          id = persons[i]._id\n        }\n      }\n      PersonService.update(id, obj)\n        .then(res => {\n          setPersons(persons.map(p => p._id !== id ? p : res.data))\n          setNewName('')\n          setNewNumber('')\n          setMessage(`Updated ${newName}`)\n          setType(\"added\")\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000)\n        })\n        .catch(e => {\n          setMessage(`Information of ${newName} has already been removed from server`)\n          setType('error')\n          setPersons(persons.filter(p => p._id !== id))\n          setTimeout(() => {\n            setMessage(null)\n          }, 5000);\n        })\n      end = true\n    }\n  })\n  if (!end) {\n    const obj = {\n      name : newName,\n      number : newNumber\n    }\n    PersonService.add(obj)\n      .then(res => {\n        setPersons(persons.concat(res.data))\n        setNewName('')\n        setNewNumber('')\n        setMessage(`Added ${newName}`)\n        setType(\"added\")\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000)\n      })\n      .catch(error => {\n        setMessage(error.response.data.split('<pre>')[1].split('<br>')[0])\n        setType('error')\n        setTimeout(() => {\n          setMessage(null)\n        }, 5000);\n      })\n  }\n}\n\nconst PersonForm = ({ persons, setPersons, setMessage, setType }) => {\n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber ] = useState('')\n\n  return (\n    <div>\n      <form onSubmit={(event) => {add(event, persons, newName, newNumber, setPersons, setNewName, setNewNumber, setMessage, setType)}}>\n        <div>name: <input value={newName} onChange={(event) => {setNewName(event.target.value)}} /></div>\n        <div>number: <input value={newNumber} onChange={(event) => {setNewNumber(event.target.value)}} /></div>\n        <div><button type=\"submit\">add</button></div>\n      </form>\n    </div>\n  )\n}\n\nconst App = () => {\n  const [persons, setPersons] = useState([])\n  const [search, setSearch] = useState('')\n  const [message, setMessage] = useState(null)\n  const [type, setType] = useState(null)\n\n  useEffect(() => {\n    PersonService\n      .get()\n      .then(response => {\n        setPersons(response.data)\n      })\n  }, [])\n  \n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Message message={message} type={type} />\n      <Filter persons={persons} search={search} setSearch={setSearch} />\n      <h3>add a new</h3>\n      <PersonForm persons={persons} setPersons={setPersons} setMessage={setMessage} setType={setType} />\n      <h3>Numbers</h3>\n      <Persons persons={persons} search={search} setPersons={setPersons} setMessage={setMessage} setType={setType} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))"],"sourceRoot":""}